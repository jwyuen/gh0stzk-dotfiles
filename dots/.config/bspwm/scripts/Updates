#!/usr/bin/env bash

# Script to check for new updates in NixOS 

HOST=$(hostname -s)

get_total_updates() {
    #nhstring="Closure size: 2048 -> 2048 (0 paths added, 0 paths removed, delta +0, disk usage +0B)."
    nhstring=$(nh os switch -n --hostname $HOST . | rg Closure)
    num_of_updates=${nhstring##*delta}
    num_of_updates=${num_of_updates%,*}
    num_of_updates=${num_of_updates##*+}
    num_of_updates=${num_of_updates##*-}

    echo $num_of_updates
}

print_updates() {
    print_updates=$(get_total_updates)

    if [[ "$print_updates" -gt 0 ]]; then
        echo -e "\033[1m\033[33mThere are $print_updates updates available:\033[0m\n"
        nh os switch -n --hostname $HOST .
    else
        echo -e "\033[1m\033[32mYour system is already updated!\033[0m"
    fi
}

update_system() {
    nh os switch -a --hostname $HOST .
}

case "$1" in
    --get-updates)get_total_updates ;;
    --print-updates)print_updates ;;
    --update-system)update_system ;;
    --help|*)echo -e "Updates [options]

Options:
	--get-updates		Get the number of updates available.
	--print-updates		Print the number of available package to update.
	--update-system		Update your system including the AUR packages.\n"
esac
